"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = _request;

var _getIterator2 = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/get-iterator"));

var _isArray2 = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/array/is-array"));

var _iterator2 = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/symbol/iterator"));

var _symbol = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/symbol"));

var _from = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/array/from"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/typeof"));

var _deleteProperty = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/reflect/delete-property"));

var _keys = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/keys"));

var _promise = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/promise"));

var _pick2 = _interopRequireDefault(require("lodash/pick"));

var _isArray3 = _interopRequireDefault(require("lodash/isArray"));

var _defaults2 = _interopRequireDefault(require("lodash/defaults"));

var _qs = _interopRequireDefault(require("qs"));

var _xhr = _interopRequireDefault(require("../lib/xhr"));

var _detect = require("../lib/detect");

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof _symbol.default === "undefined" || o[_iterator2.default] == null) { if ((0, _isArray2.default)(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = (0, _getIterator2.default)(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return (0, _from.default)(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/**
 * @name request
 * @param {Object} options
 * @returns {Promise}
 */
function _request(options) {
  return new _promise.default(function (resolve) {
    var params = (0, _pick2.default)(options, 'method', 'uri', 'withCredentials', 'headers', 'timeout', 'responseType'); // Set `response` to `true` to approximate an `HttpResponse` object

    params.response = true;
    bindProgressEvents(params, options);
    setAuth(params, options);
    setCookies(params, options);
    setDefaults(params, options);
    setResponseType(params, options);
    setContentType(params, options);
    setPayload(params, options);
    setQs(params, options);
    options.logger.debug("start http ".concat(options.method ? options.method : 'request', " to ").concat(options.uri));
    var x = (0, _xhr.default)(params, function (error, response) {
      /* istanbul ignore next */
      if (error) {
        options.logger.warn(error);
      }
      /* istanbul ignore else */


      if (response) {
        if (response.statusCode >= 400) {
          options.logger.warn("http ".concat(options.method ? options.method : 'request', " to ").concat(options.uri, " result: ").concat(response.statusCode));
        } else {
          options.logger.debug("http ".concat(options.method ? options.method : 'request', " to ").concat(options.uri, " result: ").concat(response.statusCode));
        }

        response.options = options;
        processResponseJson(response, params);
        resolve(response);
      } else {
        resolve({
          statusCode: 0,
          options: options,
          headers: options.headers,
          method: options.method,
          url: options.uri,
          body: error
        });
      }
    });
    x.onprogress = options.download.emit.bind(options.download, 'progress');
  }).catch(function (error) {
    options.logger.warn(error);
    /* eslint arrow-body-style: [0] */

    /* istanbul ignore next */

    return {
      statusCode: 0,
      options: options,
      headers: options.headers,
      method: options.method,
      url: options.uri,
      body: error
    };
  });
  /**
   * @param {Object} params
   * @param {Object} o
   * @private
   * @returns {undefined}
   */

  function bindProgressEvents(params, o) {
    if (params.method && ['PATCH', 'POST', 'PUT'].includes(params.method.toUpperCase())) {
      params.xhr = new XMLHttpRequest();
      params.xhr.upload.onprogress = o.upload.emit.bind(o.upload, 'progress');
    }
  }
  /**
   * @param {Object} params
   * @param {Object} o
   * @private
   * @returns {undefined}
   */


  function setAuth(params, o) {
    if (o.auth) {
      if (o.auth.bearer) {
        params.headers.authorization = "Bearer ".concat(o.auth.bearer);
      } else {
        var user = o.auth.user || o.auth.username;
        var pass = o.auth.pass || o.auth.password;
        var token = btoa("".concat(user, ":").concat(pass));
        params.headers.authorization = "Basic ".concat(token);
      }
    }
  }
  /**
   * @param {Object} params
   * @param {Object} o
   * @private
   * @returns {undefined}
   */


  function setCookies(params, o) {
    if (o.jar) {
      params.withCredentials = true;
    }
  }
  /**
   * @param {Object} params
   * @param {Object} o
   * @private
   * @returns {undefined}
   */


  function setDefaults(params, o) {
    var defs = {
      cors: true,
      // raynos/xhr defaults withCredentials to true if cors is true, so we need
      // to make it explicitly false by default
      withCredentials: false,
      timeout: 0
    };
    (0, _defaults2.default)(params, (0, _pick2.default)(o, (0, _keys.default)(defs)), defs);
  }
  /**
   * @param {Object} params
   * @param {Object} o
   * @private
   * @returns {undefined}
   */


  function setResponseType(params, o) {
    if (o.responseType === 'buffer') {
      params.responseType = 'arraybuffer';
    }
  }
  /**
   * @param {Object} params
   * @param {Object} o
   * @private
   * @returns {undefined}
   */


  function setContentType(params, o) {
    if (o.body instanceof Blob || o.body instanceof ArrayBuffer) {
      o.json = params.json = false;
      params.headers['content-type'] = params.headers['content-type'] || (0, _detect.detectSync)(o.body);
    }
  }
  /**
   * @param {Object} params
   * @param {Object} o
   * @private
   * @returns {undefined}
   */


  function setQs(params, o) {
    if (o.qs) {
      params.uri += "?".concat(_qs.default.stringify(o.qs));
    }
  }
  /**
   * Converts arraybuffers to blobs before uploading them
   * @param {mixed} file
   * @private
   * @returns {mixed}
   */


  function ensureBlob(file) {
    if (file instanceof ArrayBuffer) {
      var ret = file.type ? new Blob([file], {
        type: file.type
      }) : new Blob([file]);
      ret.filename = file.filename || file.name || 'untitled';
      return ret;
    }

    return file;
  }
  /**
   * Appends an item to a form
   * @param {FormData} form
   * @param {string} key
   * @param {mixed} value
   * @returns {undefined}
   */


  function append(form, key, value) {
    if ((0, _isArray3.default)(value)) {
      var _iterator = _createForOfIteratorHelper(value),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var v = _step.value;
          append(form, key, v);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return;
    }

    value = ensureBlob(value);

    if (value.name) {
      value.filename = value.name;
      form.append(key, value, value.name);
    } else {
      form.append(key, value);
    }
  }
  /**
   * @param {Object} params
   * @param {Object} o
   * @private
   * @returns {undefined}
   */


  function setPayload(params, o) {
    if ((!('json' in o) || o.json === true) && o.body) {
      params.json = o.body;
    } else if (o.form) {
      params.headers['Content-Type'] = 'application/x-www-form-urlencoded';
      params.body = _qs.default.stringify(o.form);
      (0, _deleteProperty.default)(params, 'json');
    } else if (o.formData) {
      params.body = (0, _keys.default)(o.formData).reduce(function (fd, key) {
        var value = o.formData[key];
        append(fd, key, value);
        return fd;
      }, new FormData());
    } else {
      params.body = o.body;
      (0, _deleteProperty.default)(params, 'json');
    }
  }
  /**
   * @param {Object} response
   * @param {Object} params
   * @private
   * @returns {undefined}
   */


  function processResponseJson(response, params) {
    // If params.json is not defined, xhr won't deserialize the response
    // so we should give it a shot just in case.
    if (!params.json && (0, _typeof2.default)(response.body) !== 'object') {
      try {
        response.body = JSON.parse(response.body);
      } catch (e) {
        /* eslint no-empty: [0] */
      }
    }
  }
}
//# sourceMappingURL=request.shim.js.map
