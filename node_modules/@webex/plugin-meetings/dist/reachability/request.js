"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _construct = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/reflect/construct"));

var _keys = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/keys"));

var _stringify = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/json/stringify"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _webexCore = require("@webex/webex-core");

var _loggerProxy = _interopRequireDefault(require("../common/logs/logger-proxy"));

var _constants = require("../constants");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = (0, _construct.default)(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !_construct.default) return false; if (_construct.default.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call((0, _construct.default)(Date, [], function () {})); return true; } catch (e) { return false; } }

/**
 * @class RechabilityRequest
 */
var RechabilityRequest = /*#__PURE__*/function (_StatelessWebexPlugin) {
  (0, _inherits2.default)(RechabilityRequest, _StatelessWebexPlugin);

  var _super = _createSuper(RechabilityRequest);

  function RechabilityRequest() {
    var _this;

    (0, _classCallCheck2.default)(this, RechabilityRequest);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getClusters", function () {
      return _this.request({
        method: _constants.HTTP_VERBS.GET,
        shouldRefreshAccessToken: false,
        api: _constants.API.CALLIOPEDISCOVERY,
        resource: _constants.RESOURCE.CLUSTERS
      }).then(function (res) {
        var clusters = res.body.clusters;

        _loggerProxy.default.logger.info("Reachability:request#getClusters --> get clusters successful:".concat((0, _stringify.default)(clusters)));

        return (0, _keys.default)(clusters);
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "remoteSDPForClusters", function (localSDPList) {
      return _this.request({
        method: _constants.HTTP_VERBS.POST,
        shouldRefreshAccessToken: false,
        api: _constants.API.CALLIOPEDISCOVERY,
        resource: _constants.RESOURCE.REACHABILITY,
        body: {
          offers: localSDPList
        }
      }).then(function (res) {
        _loggerProxy.default.logger.info('Reachability:request#remoteSDPForClusters --> Remote SDPs got succcessfully');

        return res.body;
      });
    });
    return _this;
  }

  return RechabilityRequest;
}(_webexCore.StatelessWebexPlugin);

var _default = RechabilityRequest;
exports.default = _default;
//# sourceMappingURL=request.js.map
